// Generated by CoffeeScript 1.6.3
(function() {
  var _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  if (typeof Backbone !== "undefined" && Backbone !== null) {
    this.DiscussionRouter = (function(_super) {
      __extends(DiscussionRouter, _super);

      function DiscussionRouter() {
        this.hideNewPost = __bind(this.hideNewPost, this);
        this.showNewPost = __bind(this.showNewPost, this);
        this.navigateToAllThreads = __bind(this.navigateToAllThreads, this);
        this.navigateToThread = __bind(this.navigateToThread, this);
        this.setActiveThread = __bind(this.setActiveThread, this);
        _ref = DiscussionRouter.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      DiscussionRouter.prototype.routes = {
        "": "allThreads",
        ":forum_name/threads/:thread_id": "showThread"
      };

      DiscussionRouter.prototype.initialize = function(options) {
        var _this = this;
        this.discussion = options['discussion'];
        this.course_settings = options['course_settings'];
        this.nav = new DiscussionThreadListView({
          collection: this.discussion,
          el: $(".forum-nav")
        });
        this.nav.on("thread:selected", this.navigateToThread);
        this.nav.on("thread:removed", this.navigateToAllThreads);
        this.nav.on("threads:rendered", this.setActiveThread);
        this.nav.on("thread:created", this.navigateToThread);
        this.nav.render();
        this.newPost = $('.new-post-article');
        this.newPostView = new NewPostView({
          el: this.newPost,
          collection: this.discussion,
          course_settings: this.course_settings,
          mode: "tab"
        });
        this.newPostView.render();
        $('.new-post-btn').bind("click", this.showNewPost);
        $('.new-post-btn').bind("keydown", function(event) {
          return DiscussionUtil.activateOnSpace(event, _this.showNewPost);
        });
        return this.newPostView.$('.cancel').bind("click", this.hideNewPost);
      };

      DiscussionRouter.prototype.allThreads = function() {
        this.nav.updateSidebar();
        return this.nav.goHome();
      };

      DiscussionRouter.prototype.setActiveThread = function() {
        if (this.thread) {
          return this.nav.setActiveThread(this.thread.get("id"));
        } else {
          return this.nav.goHome;
        }
      };

      DiscussionRouter.prototype.showThread = function(forum_name, thread_id) {
        var _this = this;
        this.thread = this.discussion.get(thread_id);
        this.thread.set("unread_comments_count", 0);
        this.thread.set("read", true);
        this.setActiveThread();
        if (this.main) {
          this.main.cleanup();
          this.main.undelegateEvents();
        }
        if (!($(".forum-content").is(":visible"))) {
          $(".forum-content").fadeIn();
        }
        if (this.newPost.is(":visible")) {
          this.newPost.fadeOut();
        }
        this.main = new DiscussionThreadView({
          el: $(".forum-content"),
          model: this.thread,
          mode: "tab"
        });
        this.main.render();
        return this.main.on("thread:responses:rendered", function() {
          return _this.nav.updateSidebar();
        });
      };

      DiscussionRouter.prototype.navigateToThread = function(thread_id) {
        var thread;
        thread = this.discussion.get(thread_id);
        return this.navigate("" + (thread.get("commentable_id")) + "/threads/" + thread_id, {
          trigger: true
        });
      };

      DiscussionRouter.prototype.navigateToAllThreads = function() {
        return this.navigate("", {
          trigger: true
        });
      };

      DiscussionRouter.prototype.showNewPost = function(event) {
        var _this = this;
        return $('.forum-content').fadeOut({
          duration: 200,
          complete: function() {
            _this.newPost.fadeIn(200);
            return $('.new-post-title').focus();
          }
        });
      };

      DiscussionRouter.prototype.hideNewPost = function(event) {
        var _this = this;
        return this.newPost.fadeOut({
          duration: 200,
          complete: function() {
            return $('.forum-content').fadeIn(200);
          }
        });
      };

      return DiscussionRouter;

    })(Backbone.Router);
  }

}).call(this);
