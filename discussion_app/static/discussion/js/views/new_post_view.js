// Generated by CoffeeScript 1.6.3
(function() {
  var _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  if (typeof Backbone !== "undefined" && Backbone !== null) {
    this.NewPostView = (function(_super) {
      __extends(NewPostView, _super);

      function NewPostView() {
        this.hideTopicDropdown = __bind(this.hideTopicDropdown, this);
        _ref = NewPostView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      NewPostView.prototype.initialize = function(options) {
        var _ref1;
        this.mode = options.mode || "inline";
        if ((_ref1 = this.mode) !== "tab" && _ref1 !== "inline") {
          throw new Error("invalid mode: " + this.mode);
        }
        this.course_settings = options.course_settings;
        this.maxNameWidth = 100;
        return this.topicId = options.topicId;
      };

      NewPostView.prototype.render = function() {
        if (this.mode === "tab") {
          this.$el.html(_.template($("#new-post-tab-template").html(), {
            topic_dropdown_html: this.getTopicDropdownHTML(),
            options_html: this.getOptionsHTML(),
            editor_html: this.getEditorHTML()
          }));
          this.dropdownButton = this.$(".topic_dropdown_button");
          this.topicMenu = this.$(".topic_menu_wrapper");
          this.menuOpen = this.dropdownButton.hasClass('dropped');
          this.topicId = this.$(".topic").first().data("discussion_id");
          this.topicText = this.getFullTopicName(this.$(".topic").first());
          if (!this.$(".topic_menu li a").first().is("[cohorted=true]")) {
            $('.choose-cohort').hide();
          }
          this.setSelectedTopic();
        } else {
          this.$el.html(_.template($("#new-post-inline-template").html(), {
            options_html: this.getOptionsHTML(),
            editor_html: this.getEditorHTML()
          }));
        }
        return DiscussionUtil.makeWmdEditor(this.$el, $.proxy(this.$, this), "new-post-body");
      };

      NewPostView.prototype.getTopicDropdownHTML = function() {
        var topics_html, _renderCategoryMap;
        _renderCategoryMap = function(map) {
          var category_template, entry, entry_template, html, name, _i, _len, _ref1;
          category_template = _.template($("#new-post-menu-category-template").html());
          entry_template = _.template($("#new-post-menu-entry-template").html());
          html = "";
          _ref1 = map.children;
          for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
            name = _ref1[_i];
            if (name in map.entries) {
              entry = map.entries[name];
              html += entry_template({
                text: name,
                id: entry.id,
                is_cohorted: entry.is_cohorted
              });
            } else {
              html += category_template({
                text: name,
                entries: _renderCategoryMap(map.subcategories[name])
              });
            }
          }
          return html;
        };
        topics_html = _renderCategoryMap(this.course_settings.get("category_map"));
        return _.template($("#new-post-topic-dropdown-template").html(), {
          topics_html: topics_html
        });
      };

      NewPostView.prototype.getEditorHTML = function() {
        return _.template($("#new-post-editor-template").html(), {});
      };

      NewPostView.prototype.getOptionsHTML = function() {
        var cohort_options, context, user_cohort_id;
        if (this.course_settings.get("is_cohorted") && DiscussionUtil.isStaff()) {
          user_cohort_id = $("#discussion-container").data("user-cohort-id");
          cohort_options = _.map(this.course_settings.get("cohorts"), function(cohort) {
            return {
              value: cohort.id,
              text: cohort.name,
              selected: cohort.id === user_cohort_id
            };
          });
        } else {
          cohort_options = null;
        }
        context = _.clone(this.course_settings.attributes);
        context.cohort_options = cohort_options;
        return _.template($("#new-post-options-template").html(), context);
      };

      NewPostView.prototype.events = {
        "submit .new-post-form": "createPost",
        "click  .topic_dropdown_button": "toggleTopicDropdown",
        "click  .topic_menu_wrapper": "setTopic",
        "click  .topic_menu_search": "ignoreClick",
        "keyup .form-topic-drop-search-input": DiscussionFilter.filterDrop
      };

      NewPostView.prototype.ignoreClick = function(event) {
        return event.stopPropagation();
      };

      NewPostView.prototype.createPost = function(event) {
        var anonymous, anonymous_to_peers, body, follow, group, title, url,
          _this = this;
        event.preventDefault();
        title = this.$(".new-post-title").val();
        body = this.$(".new-post-body").find(".wmd-input").val();
        group = this.$(".new-post-group option:selected").attr("value");
        anonymous = false || this.$("input.discussion-anonymous").is(":checked");
        anonymous_to_peers = false || this.$("input.discussion-anonymous-to-peers").is(":checked");
        follow = false || this.$("input.discussion-follow").is(":checked");
        url = DiscussionUtil.urlFor('create_thread', this.topicId);
        return DiscussionUtil.safeAjax({
          $elem: $(event.target),
          $loading: event ? $(event.target) : void 0,
          url: url,
          type: "POST",
          dataType: 'json',
          async: false,
          data: {
            thread_type: "discussion",
            title: title,
            body: body,
            anonymous: anonymous,
            anonymous_to_peers: anonymous_to_peers,
            auto_subscribe: follow,
            group_id: group
          },
          error: DiscussionUtil.formErrorHandler(this.$(".new-post-form-errors")),
          success: function(response, textStatus) {
            var thread;
            thread = new Thread(response['content']);
            DiscussionUtil.clearFormErrors(_this.$(".new-post-form-errors"));
            _this.$el.hide();
            _this.$(".new-post-title").val("").attr("prev-text", "");
            _this.$(".new-post-body textarea").val("").attr("prev-text", "");
            _this.$(".wmd-preview p").html("");
            return _this.collection.add(thread);
          }
        });
      };

      NewPostView.prototype.toggleTopicDropdown = function(event) {
        event.stopPropagation();
        if (this.menuOpen) {
          return this.hideTopicDropdown();
        } else {
          return this.showTopicDropdown();
        }
      };

      NewPostView.prototype.showTopicDropdown = function() {
        this.menuOpen = true;
        this.dropdownButton.addClass('dropped');
        this.topicMenu.show();
        $(".form-topic-drop-search-input").focus();
        $("body").bind("keydown", this.setActiveItem);
        $("body").bind("click", this.hideTopicDropdown);
        return this.maxNameWidth = this.dropdownButton.width() - 40;
      };

      NewPostView.prototype.hideTopicDropdown = function() {
        this.menuOpen = false;
        this.dropdownButton.removeClass('dropped');
        this.topicMenu.hide();
        $("body").unbind("keydown", this.setActiveItem);
        return $("body").unbind("click", this.hideTopicDropdown);
      };

      NewPostView.prototype.setTopic = function(event) {
        var $target;
        $target = $(event.target);
        if ($target.data('discussion_id')) {
          this.topicText = $target.html();
          this.topicText = this.getFullTopicName($target);
          this.topicId = $target.data('discussion_id');
          this.setSelectedTopic();
          if ($target.is('[cohorted=true]')) {
            return $('.choose-cohort').show();
          } else {
            return $('.choose-cohort').hide();
          }
        }
      };

      NewPostView.prototype.setSelectedTopic = function() {
        return this.dropdownButton.html(this.fitName(this.topicText) + ' <span class="drop-arrow">▾</span>');
      };

      NewPostView.prototype.getFullTopicName = function(topicElement) {
        var name;
        name = topicElement.html();
        topicElement.parents('ul').not('.topic_menu').each(function() {
          return name = $(this).siblings('a').text() + ' / ' + name;
        });
        return name;
      };

      NewPostView.prototype.getNameWidth = function(name) {
        var test, width;
        test = $("<div>");
        test.css({
          "font-size": this.dropdownButton.css('font-size'),
          opacity: 0,
          position: 'absolute',
          left: -1000,
          top: -1000
        });
        $("body").append(test);
        test.html(name);
        width = test.width();
        test.remove();
        return width;
      };

      NewPostView.prototype.fitName = function(name) {
        var partialName, path, rawName, width, x;
        width = this.getNameWidth(name);
        if (width < this.maxNameWidth) {
          return name;
        }
        path = (function() {
          var _i, _len, _ref1, _results;
          _ref1 = name.split("/");
          _results = [];
          for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
            x = _ref1[_i];
            _results.push(x.replace(/^\s+|\s+$/g, ""));
          }
          return _results;
        })();
        while (path.length > 1) {
          path.shift();
          partialName = gettext("…") + " / " + path.join(" / ");
          if (this.getNameWidth(partialName) < this.maxNameWidth) {
            return partialName;
          }
        }
        rawName = path[0];
        name = gettext("…") + " / " + rawName;
        while (this.getNameWidth(name) > this.maxNameWidth) {
          rawName = rawName.slice(0, rawName.length - 1);
          name = gettext("…") + " / " + rawName + " " + gettext("…");
        }
        return name;
      };

      NewPostView.prototype.setActiveItem = function(event) {
        var index, itemFromTop, itemTop, items, scrollTarget, scrollTop;
        if (event.which === 13) {
          $(".topic_menu_wrapper .focused").click();
          return;
        }
        if (event.which !== 40 && event.which !== 38) {
          return;
        }
        event.preventDefault();
        items = $.makeArray($(".topic_menu_wrapper a").not(".hidden"));
        index = items.indexOf($('.topic_menu_wrapper .focused')[0]);
        if (event.which === 40) {
          index = Math.min(index + 1, items.length - 1);
        }
        if (event.which === 38) {
          index = Math.max(index - 1, 0);
        }
        $(".topic_menu_wrapper .focused").removeClass("focused");
        $(items[index]).addClass("focused");
        itemTop = $(items[index]).parent().offset().top;
        scrollTop = $(".topic_menu").scrollTop();
        itemFromTop = $(".topic_menu").offset().top - itemTop;
        scrollTarget = Math.min(scrollTop - itemFromTop, scrollTop);
        scrollTarget = Math.max(scrollTop - itemFromTop - $(".topic_menu").height() + $(items[index]).height() + 20, scrollTarget);
        return $(".topic_menu").scrollTop(scrollTarget);
      };

      return NewPostView;

    })(Backbone.View);
  }

}).call(this);
